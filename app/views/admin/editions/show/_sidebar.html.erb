<aside>
  <div class="app-view-edition-summary__sidebar-actions">
    <%=
      items = []

      if @edition.can_submit?
        items << render("govuk_publishing_components/components/button", {
          text: "Submit for 2nd eyes",
          href: submit_admin_edition_path(@edition, lock_version: @edition.lock_version)
        })
      end

      if @edition.can_unschedule? && can?(:update, @edition)
        confirm = "Are you sure you want to unschedule this edition and return it to the submitted state?"
        items << render("govuk_publishing_components/components/button", {
          text: "Unschedule",
          title: "Unschedule this edition to allow changes or prevent automatic publication on #{l edition.scheduled_publication, format: :long}",
          href: unschedule_admin_edition_path(@edition, lock_version: @edition.lock_version),
          data_attributes: { confirm: },
          secondary_quiet: true,
        })
      end

      if scheduler.can_perform? && can?(:publish, @edition)
        items << render("govuk_publishing_components/components/button", {
          text: "Schedule",
          title: "Schedule #{@edition.title} for publication on #{l @edition.scheduled_publication, format: :long}",
          href: schedule_admin_edition_path(@edition, lock_version: @edition.lock_version),
        })
      elsif force_scheduler.can_perform? && can?(:force_publish, @edition)
        items << render("govuk_publishing_components/components/button", {
          text: "Force schedule",
          title: "Schedule #{@edition.title} for publication on #{l @edition.scheduled_publication, format: :long}",
          href: force_schedule_admin_edition_path(@edition, lock_version: @edition.lock_version),
          data_attributes: { confirm: "Are you sure you want to force schedule this document for publication?" },
          secondary_quiet: true,
        })
      end

      if publisher.can_perform? && can?(:publish, @edition)
        items << render("govuk_publishing_components/components/button", {
          text: "Publish",
          title: "Publish #{@edition.title}",
          href: publish_admin_edition_path(@edition, lock_version: @edition.lock_version),
        })
      elsif force_publisher.can_perform? && can?(:force_publish, @edition)
        items << render("govuk_publishing_components/components/button", {
          text: "Force publish",
          title: "Publish #{@edition.title}",
          href: confirm_force_publish_admin_edition_path(@edition, lock_version: @edition.lock_version),
          secondary_quiet: true,
        })
      end

      if @edition.can_reject? && can?(:reject, @edition)
        items << render("govuk_publishing_components/components/button", {
          text: "Reject",
          href: reject_admin_edition_path(@edition, lock_version: @edition.lock_version),
          destructive: true,
        })
      end

      if @edition.can_delete? && @edition.unpublishing.nil?
        items << link_to(
          "Discard draft",
          confirm_destroy_admin_edition_path(@edition),
          class: "govuk-link"
        )
      end

      if can?(:unwithdraw, @edition) && @edition.can_unwithdraw?
        items << render("govuk_publishing_components/components/button", {
          text: "Unwithdraw",
          href: confirm_unwithdraw_admin_edition_path(@edition, lock_version: @edition.lock_version),
          secondary_quiet: true,
        })
      end

      if can?(:unpublish, @edition)
        if @edition.published?
          items << render("govuk_publishing_components/components/button", {
            text: "Withdraw or unpublish",
            href: confirm_unpublish_admin_edition_path(@edition, lock_version: @edition.lock_version),
            secondary_quiet: true,
          })
        elsif @edition.unpublishing.present? && @edition.unpublishing.explanation.present?
          items << link_to(
            "Edit #{withdrawal_or_unpublishing(@edition)} explanation",
            edit_admin_edition_unpublishing_path(@edition),
            class: "govuk-link"
          )
        end
      end

      render "govuk_publishing_components/components/list", {
        extra_spacing: true,
        items: items
      }
    %>
  </div>
</aside>
